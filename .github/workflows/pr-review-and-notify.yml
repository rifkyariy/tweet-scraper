name: Copilot PR Review and Conditional Slack Notification

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  copilot-review:
    runs-on: ubuntu-latest
    # This 'outputs' block makes the result of the job available to other jobs
    outputs:
      outcome: ${{ steps.check_review.outputs.conclusion }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Review PR with GitHub Copilot
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh extension install github/gh-copilot --force
          gh copilot suggest > copilot_review.md

      - name: Create Comment on PR with Copilot Review
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const review = fs.readFileSync('copilot_review.md', 'utf8');
            // Only post a comment if there is something to say
            if (review.trim().length > 0) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `### ü§ñ GitHub Copilot Analysis\n\n${review}`
              });
            }

      - name: Check Copilot Review Output
        # This step checks if the review file is basically empty or has suggestions
        id: check_review
        run: |
          # If the review file is smaller than 50 bytes, we assume no suggestions were made.
          if [ $(wc -c < copilot_review.md) -lt 50 ]; then
            echo "conclusion=success" >> $GITHUB_OUTPUT
          else
            echo "conclusion=failure" >> $GITHUB_OUTPUT
          fi

  slack-notification:
    needs: copilot-review # Depends on the review job
    runs-on: ubuntu-latest
    steps:
      - name: Send 'Approved' Slack Notification
        # This step runs ONLY if the 'outcome' from the previous job was 'success'
        if: needs.copilot-review.outputs.outcome == 'success'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: "‚úÖ PR Approved by Copilot"
          SLACK_MESSAGE: |
            PR by *@${{ github.actor }}* looks good! Copilot found no issues.
            *<${{ github.event.pull_request.html_url }}|Review and Merge>*
          SLACK_COLOR: '#28a745' # Green

      - name: Send 'Suggestions Found' Slack Notification
        # This step runs ONLY if the 'outcome' from the previous job was 'failure'
        if: needs.copilot-review.outputs.outcome == 'failure'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TITLE: "‚ö†Ô∏è Suggestions Found in PR"
          SLACK_MESSAGE: |
            Copilot has suggestions for the PR by *@${{ github.actor }}*.
            *<${{ github.event.pull_request.html_url }}|View PR and Review Comments>*
          SLACK_COLOR: '#dc3545' # Red